CREATE DATABASE ONLINE_SHOP;
USE ONLINE_SHOP;

-- THE TABLE WITH OUR_USERS
CREATE TABLE OUR_USERS (
	U_ID INT(15) NOT NULL PRIMARY KEY,
    LOGIN VARCHAR(15) NOT NULL,
    F_NAME VARCHAR(30) NOT NULL,
    L_NAME VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(45) );
    
-- THE TABLE WITH OUR_ITEMS(GOODS)
  CREATE TABLE OUR_ITEMS (
	I_ID INT(15) NOT NULL PRIMARY KEY,
    NAME VARCHAR(45) NOT NULL,
    PRICE DECIMAL(10,2) NOT NULL,
    TYPE VARCHAR(15) NOT NULL,
    DELIVERY BOOLEAN NOT NULL);
    
-- THE TABLE WITH OUR_ORDERS
CREATE TABLE OUR_ORDERS (
	O_ID INT(15) NOT NULL PRIMARY KEY,
    U_ID INT(15) NOT NULL,
    I_ID INT(15) NOT NULL,
    DATE DATE NOT NULL,
    PAYMENT BOOLEAN NOT NULL);
    
-- FILL IN "OUR_USERS" TABLE
INSERT INTO OUR_USERS (U_ID,LOGIN,F_NAME,L_NAME,EMAIL)
	VALUES
	(1, "USER_1", "BOB", "MILLIGAN", "B.M@GMAIL.COM"),
	(2, "USER_2", "BILL", "CLINTON", "B.C@GMAIL.COM"),
	(3, "USER_3", "JOHN", "FARINA", "J.F@GMAIL.COM"),
	(4, "USER_4", "PAULA", "CAPEN", "P.C@GMAIL.COM"),
    (5, "USER_5", "JOHNN", "FREDDIS", "J.FR@GMAIL.COM");
 
 INSERT INTO OUR_USERS (U_ID,LOGIN,F_NAME,L_NAME)
	VALUES
    (6, "USER_6", "JOE", "FDIS");
    
-- FILL IN "OUR_ITEMS" TABLE
INSERT INTO OUR_ITEMS (I_ID, NAME, PRICE, TYPE, DELIVERY)
	VALUES
	(1000001, "IPHONE 11 PRO", 540.25, "SMARTPHONE", TRUE),
	(1000002, "MACBOOK 16-256-M1", 2140.00, "LAPTOP", TRUE),
	(1000003, "APPLE WATCH ULTRA", 840.99, "SMARTWATCH", TRUE),
	(1000004, "IPHONE 14 PRO", 940.60, "SMARTPHONE", FALSE),
    (1000005, "IPHONE 13 PRO", 840.60, "SMARTPHONE", FALSE),
    (1000006, "MACBOOK 14-256-M2", 1840.60, "LAPTOP", TRUE);
    
-- FILL IN "OUR_ORDERS" TABLE
INSERT INTO OUR_ORDERS (O_ID, U_ID, I_ID, DATE, PAYMENT)
	VALUES
	(1,1, 1000004, "2023-09-09", TRUE),
    (2,4, 1000002, "2023-09-11", TRUE),
    (3,1, 1000001, "2023-09-11", TRUE),
    (4,3, 1000003, "2023-09-12", FALSE);

-- CHECKING THE TABLES USING OPERATORS
SELECT * FROM OUR_USERS;
SELECT * FROM OUR_ITEMS WHERE I_ID=1000003 AND PRICE=840.99;
SELECT * FROM OUR_ORDERS WHERE NOT DATE="2023-09-11";
SELECT * FROM OUR_ITEMS WHERE PRICE BETWEEN 500 AND 1100;
SELECT * FROM OUR_USERS WHERE U_ID IN (1,3);

-- STATEMENTS DELETE, UPDATE, NULL VALUES
DELETE FROM OUR_USERS WHERE F_NAME="JOHNN" OR F_NAME="ILIYA";

SELECT * FROM OUR_USERS WHERE EMAIL IS NULL;
SELECT * FROM OUR_USERS WHERE EMAIL IS NOT NULL;

UPDATE OUR_ITEMS
	SET NAME="IPHONE 14"
    WHERE I_ID=1000004;
    
SELECT * FROM OUR_USERS
	ORDER BY U_ID DESC
    LIMIT 3;
    
-- MIN, MAX, COUNT FUNCTIONS, AVG
SELECT MIN(PRICE) FROM OUR_ITEMS;
SELECT MAX(PRICE) FROM OUR_ITEMS;

SELECT COUNT(PRICE) FROM OUR_ITEMS
	WHERE PRICE>900;

SELECT AVG(PRICE) AS OUR_AVERAGE_PRICE
	FROM OUR_ITEMS;

-- WILDCART CHARACTERS
SELECT * FROM OUR_ITEMS
	WHERE NAME LIKE "A%A" OR TYPE LIKE "L_PT_P";
    
-- JOIN WITH A FILTER AND ORDER BY 
SELECT OUR_ITEMS.NAME, OUR_ITEMS.PRICE, OUR_ORDERS.DATE, OUR_ORDERS.PAYMENT
FROM OUR_ITEMS
INNER JOIN OUR_ORDERS ON OUR_ITEMS.I_ID = OUR_ORDERS.I_ID
WHERE OUR_ITEMS.PRICE>600
ORDER BY OUR_ITEMS.PRICE DESC;

SELECT * FROM OUR_ITEMS
RIGHT JOIN OUR_ORDERS ON OUR_ITEMS.I_ID = OUR_ORDERS.I_ID;

SELECT * FROM OUR_ITEMS
LEFT JOIN OUR_ORDERS ON OUR_ITEMS.I_ID = OUR_ORDERS.I_ID;

SELECT * FROM OUR_ITEMS
CROSS JOIN OUR_ORDERS;

-- CONDITIONS
SELECT OUR_ITEMS.NAME, OUR_ITEMS.PRICE, 
CASE 
	WHEN OUR_ITEMS.PRICE<900 THEN "CREDIT CARD, CASH"
    WHEN OUR_ITEMS.PRICE>900 THEN "CASH ONLY"
    ELSE "AN ERROR"
END AS PAYMENT_METHOD
FROM OUR_ITEMS;

-- INION OPERATOR
SELECT U_ID FROM OUR_USERS
UNION ALL
SELECT U_ID FROM OUR_ORDERS;

-- DROP TABLE OUR_USERS;
-- DROP TABLE OUR_ITEMS;
-- DROP TABLE OUR_ORDERS;